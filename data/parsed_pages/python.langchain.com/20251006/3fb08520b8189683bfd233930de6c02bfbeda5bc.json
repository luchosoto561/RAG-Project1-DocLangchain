{
  "provenance": {
    "url_final": "https://python.langchain.com/docs/tutorials/agents/",
    "title": "Build an Agent | ü¶úÔ∏èüîó LangChain",
    "fetched_at": "2025-10-06T21:54:09.434085"
  },
  "sections": [
    {
      "level": 1,
      "heading_text": "Build an Agent | ü¶úÔ∏èüîó LangChain",
      "blocks": [
        {
          "type": "paragraph",
          "text": "LangChain supports the creation of agents, or systems that use LLMs as reasoning engines to determine which actions to take and the inputs necessary to perform the action. After executing actions, the results can be fed back into the LLM to determine whether more actions are needed, or whether it is okay to finish. This is often achieved via tool-calling."
        },
        {
          "type": "paragraph",
          "text": "In this tutorial we will build an agent that can interact with a search engine. You will be able to ask this agent questions, watch it call the search tool, and have conversations with it."
        }
      ],
      "children": [
        {
          "level": 2,
          "heading_text": "End-to-end agent‚Äã",
          "anchor": "end-to-end-agent",
          "blocks": [
            {
              "type": "paragraph",
              "text": "The code snippet below represents a fully functional agent that uses an LLM to decide which tools to use. It is equipped with a generic search tool. It has conversational memory - meaning that it can be used as a multi-turn chatbot."
            },
            {
              "type": "paragraph",
              "text": "In the rest of the guide, we will walk through the individual components and what each part does - but if you want to just grab some code and get started, feel free to use this!"
            },
            {
              "type": "code",
              "code": "# Import relevant functionalityfrom langchain.chat_models import init_chat_modelfrom langchain_tavily import TavilySearchfrom langgraph.checkpoint.memory import MemorySaverfrom langgraph.prebuilt import create_react_agent# Create the agentmemory = MemorySaver()model = init_chat_model(\"anthropic:claude-3-5-sonnet-latest\")search = TavilySearch(max_results=2)tools = [search]agent_executor = create_react_agent(model, tools, checkpointer=memory)"
            },
            {
              "type": "code",
              "code": "# Use the agentconfig = {\"configurable\": {\"thread_id\": \"abc123\"}}input_message = {    \"role\": \"user\",    \"content\": \"Hi, I'm Bob and I live in SF.\",}for step in agent_executor.stream(    {\"messages\": [input_message]}, config, stream_mode=\"values\"):    step[\"messages\"][-1].pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================Hi, I'm Bob and I live in SF.==================================\u001b[1m Ai Message \u001b[0m==================================Hello Bob! I notice you've introduced yourself and mentioned you live in SF (San Francisco), but you haven't asked a specific question or made a request that requires the use of any tools. Is there something specific you'd like to know about San Francisco or any other topic? I'd be happy to help you find information using the available search tools."
            },
            {
              "type": "code",
              "code": "input_message = {    \"role\": \"user\",    \"content\": \"What's the weather where I live?\",}for step in agent_executor.stream(    {\"messages\": [input_message]}, config, stream_mode=\"values\"):    step[\"messages\"][-1].pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================What's the weather where I live?==================================\u001b[1m Ai Message \u001b[0m==================================[{'text': 'Let me search for current weather information in San Francisco.', 'type': 'text'}, {'id': 'toolu_011kSdheoJp8THURoLmeLtZo', 'input': {'query': 'current weather San Francisco CA'}, 'name': 'tavily_search', 'type': 'tool_use'}]Tool Calls:  tavily_search (toolu_011kSdheoJp8THURoLmeLtZo) Call ID: toolu_011kSdheoJp8THURoLmeLtZo  Args:    query: current weather San Francisco CA=================================\u001b[1m Tool Message \u001b[0m=================================Name: tavily_search{\"query\": \"current weather San Francisco CA\", \"follow_up_questions\": null, \"answer\": null, \"images\": [], \"results\": [{\"title\": \"Weather in San Francisco, CA\", \"url\": \"https://www.weatherapi.com/\", \"content\": \"{'location': {'name': 'San Francisco', 'region': 'California', 'country': 'United States of America', 'lat': 37.775, 'lon': -122.4183, 'tz_id': 'America/Los_Angeles', 'localtime_epoch': 1750168606, 'localtime': '2025-06-17 06:56'}, 'current': {'last_updated_epoch': 1750167900, 'last_updated': '2025-06-17 06:45', 'temp_c': 11.7, 'temp_f': 53.1, 'is_day': 1, 'condition': {'text': 'Fog', 'icon': '//cdn.weatherapi.com/weather/64x64/day/248.png', 'code': 1135}, 'wind_mph': 4.0, 'wind_kph': 6.5, 'wind_degree': 215, 'wind_dir': 'SW', 'pressure_mb': 1017.0, 'pressure_in': 30.02, 'precip_mm': 0.0, 'precip_in': 0.0, 'humidity': 86, 'cloud': 0, 'feelslike_c': 11.3, 'feelslike_f': 52.4, 'windchill_c': 8.7, 'windchill_f': 47.7, 'heatindex_c': 9.8, 'heatindex_f': 49.7, 'dewpoint_c': 9.6, 'dewpoint_f': 49.2, 'vis_km': 16.0, 'vis_miles': 9.0, 'uv': 0.0, 'gust_mph': 6.3, 'gust_kph': 10.2}}\", \"score\": 0.944705, \"raw_content\": null}, {\"title\": \"Weather in San Francisco in June 2025\", \"url\": \"https://world-weather.info/forecast/usa/san_francisco/june-2025/\", \"content\": \"Detailed ‚ö° San Francisco Weather Forecast for June 2025 - day/night üå°Ô∏è temperatures, precipitations - World-Weather.info. Add the current city. Search. Weather; Archive; Weather Widget ¬∞F. World; United States; California; Weather in San Francisco; ... 17 +64¬∞ +54¬∞ 18 +61¬∞ +54¬∞ 19\", \"score\": 0.86441374, \"raw_content\": null}], \"response_time\": 2.34}==================================\u001b[1m Ai Message \u001b[0m==================================Based on the search results, here's the current weather in San Francisco:- Temperature: 53.1¬∞F (11.7¬∞C)- Condition: Foggy- Wind: 4.0 mph from the Southwest- Humidity: 86%- Visibility: 9 milesThis is quite typical weather for San Francisco, with the characteristic fog that the city is known for. Would you like to know anything else about the weather or San Francisco in general?"
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Setup‚Äã",
          "anchor": "setup",
          "blocks": [],
          "children": [
            {
              "level": 3,
              "heading_text": "Jupyter Notebook‚Äã",
              "anchor": "jupyter-notebook",
              "blocks": [
                {
                  "type": "paragraph",
                  "text": "This guide (and most of the other guides in the documentation) uses Jupyter notebooks and assumes the reader is as well. Jupyter notebooks are perfect interactive environments for learning how to work with LLM systems because oftentimes things can go wrong (unexpected output, API down, etc), and observing these cases is a great way to better understand building with LLMs."
                },
                {
                  "type": "paragraph",
                  "text": "This and other tutorials are perhaps most conveniently run in a Jupyter notebook. See here for instructions on how to install."
                }
              ],
              "children": []
            },
            {
              "level": 3,
              "heading_text": "Installation‚Äã",
              "anchor": "installation",
              "blocks": [
                {
                  "type": "paragraph",
                  "text": "To install LangChain run:"
                },
                {
                  "type": "code",
                  "code": "%pip install -U langgraph langchain-tavily langgraph-checkpoint-sqlite"
                },
                {
                  "type": "paragraph",
                  "text": "For more details, see our Installation guide."
                }
              ],
              "children": []
            },
            {
              "level": 3,
              "heading_text": "LangSmith‚Äã",
              "anchor": "langsmith",
              "blocks": [
                {
                  "type": "paragraph",
                  "text": "Many of the applications you build with LangChain will contain multiple steps with multiple invocations of LLM calls. As these applications get more and more complex, it becomes crucial to be able to inspect what exactly is going on inside your chain or agent. The best way to do this is with LangSmith."
                },
                {
                  "type": "paragraph",
                  "text": "After you sign up at the link above, make sure to set your environment variables to start logging traces:"
                },
                {
                  "type": "code",
                  "code": "export LANGSMITH_TRACING=\"true\"export LANGSMITH_API_KEY=\"...\""
                },
                {
                  "type": "paragraph",
                  "text": "Or, if in a notebook, you can set them with:"
                },
                {
                  "type": "code",
                  "code": "import getpassimport osos.environ[\"LANGSMITH_TRACING\"] = \"true\"os.environ[\"LANGSMITH_API_KEY\"] = getpass.getpass()"
                }
              ],
              "children": []
            },
            {
              "level": 3,
              "heading_text": "Tavily‚Äã",
              "anchor": "tavily",
              "blocks": [
                {
                  "type": "paragraph",
                  "text": "We will be using Tavily (a search engine) as a tool. In order to use it, you will need to get and set an API key:"
                },
                {
                  "type": "code",
                  "code": "export TAVILY_API_KEY=\"...\""
                },
                {
                  "type": "paragraph",
                  "text": "Or, if in a notebook, you can set it with:"
                },
                {
                  "type": "code",
                  "code": "import getpassimport osos.environ[\"TAVILY_API_KEY\"] = getpass.getpass()"
                }
              ],
              "children": []
            }
          ]
        },
        {
          "level": 2,
          "heading_text": "Define tools‚Äã",
          "anchor": "define-tools",
          "blocks": [
            {
              "type": "paragraph",
              "text": "We first need to create the tools we want to use. Our main tool of choice will be Tavily - a search engine. We can use the dedicated langchain-tavily integration package to easily use Tavily search engine as tool with LangChain."
            },
            {
              "type": "code",
              "code": "from langchain_tavily import TavilySearchsearch = TavilySearch(max_results=2)search_results = search.invoke(\"What is the weather in SF\")print(search_results)# If we want, we can create other tools.# Once we have all the tools we want, we can put them in a list that we will reference later.tools = [search]"
            },
            {
              "type": "code",
              "code": "{'query': 'What is the weather in SF', 'follow_up_questions': None, 'answer': None, 'images': [], 'results': [{'title': 'Weather in San Francisco, CA', 'url': 'https://www.weatherapi.com/', 'content': \"{'location': {'name': 'San Francisco', 'region': 'California', 'country': 'United States of America', 'lat': 37.775, 'lon': -122.4183, 'tz_id': 'America/Los_Angeles', 'localtime_epoch': 1750168606, 'localtime': '2025-06-17 06:56'}, 'current': {'last_updated_epoch': 1750167900, 'last_updated': '2025-06-17 06:45', 'temp_c': 11.7, 'temp_f': 53.1, 'is_day': 1, 'condition': {'text': 'Fog', 'icon': '//cdn.weatherapi.com/weather/64x64/day/248.png', 'code': 1135}, 'wind_mph': 4.0, 'wind_kph': 6.5, 'wind_degree': 215, 'wind_dir': 'SW', 'pressure_mb': 1017.0, 'pressure_in': 30.02, 'precip_mm': 0.0, 'precip_in': 0.0, 'humidity': 86, 'cloud': 0, 'feelslike_c': 11.3, 'feelslike_f': 52.4, 'windchill_c': 8.7, 'windchill_f': 47.7, 'heatindex_c': 9.8, 'heatindex_f': 49.7, 'dewpoint_c': 9.6, 'dewpoint_f': 49.2, 'vis_km': 16.0, 'vis_miles': 9.0, 'uv': 0.0, 'gust_mph': 6.3, 'gust_kph': 10.2}}\", 'score': 0.9185379, 'raw_content': None}, {'title': 'Weather in San Francisco in June 2025', 'url': 'https://world-weather.info/forecast/usa/san_francisco/june-2025/', 'content': \"Weather in San Francisco in June 2025 (California) - Detailed Weather Forecast for a Month *   Weather in San Francisco Weather in San Francisco in June 2025 *   1 +63¬∞ +55¬∞ *   2 +66¬∞ +54¬∞ *   3 +66¬∞ +55¬∞ *   4 +66¬∞ +54¬∞ *   5 +66¬∞ +55¬∞ *   6 +66¬∞ +57¬∞ *   7 +64¬∞ +55¬∞ *   8 +63¬∞ +55¬∞ *   9 +63¬∞ +54¬∞ *   10 +59¬∞ +54¬∞ *   11 +59¬∞ +54¬∞ *   12 +61¬∞ +54¬∞ Weather in Washington, D.C.**+68¬∞** Sacramento**+81¬∞** Pleasanton**+72¬∞** Redwood City**+68¬∞** San Leandro**+61¬∞** San Mateo**+64¬∞** San Rafael**+70¬∞** San Ramon**+64¬∞** South San Francisco**+61¬∞** Daly City**+59¬∞** Wilder**+66¬∞** Woodacre**+70¬∞** world's temperature today Colchani day+50¬∞F night+16¬∞F Az Zubayr day+124¬∞F night+93¬∞F Weather forecast on your site Install _San Francisco_ +61¬∞ Temperature units\", 'score': 0.7978881, 'raw_content': None}], 'response_time': 2.62}"
            },
            {
              "type": "paragraph",
              "text": "In many applications, you may want to define custom tools. LangChain supports custom tool creation via Python functions and other means. Refer to the How to create tools guide for details."
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Using Language Models‚Äã",
          "anchor": "using-language-models",
          "blocks": [
            {
              "type": "paragraph",
              "text": "Next, let's learn how to use a language model to call tools. LangChain supports many different language models that you can use interchangably - select the one you want to use below!"
            },
            {
              "type": "code",
              "code": "pip install -qU \"langchain[google-genai]\""
            },
            {
              "type": "code",
              "code": "import getpassimport osif not os.environ.get(\"GOOGLE_API_KEY\"):  os.environ[\"GOOGLE_API_KEY\"] = getpass.getpass(\"Enter API key for Google Gemini: \")from langchain.chat_models import init_chat_modelmodel = init_chat_model(\"gemini-2.5-flash\", model_provider=\"google_genai\")"
            },
            {
              "type": "paragraph",
              "text": "You can call the language model by passing in a list of messages. By default, the response is a content string."
            },
            {
              "type": "code",
              "code": "query = \"Hi!\"response = model.invoke([{\"role\": \"user\", \"content\": query}])response.text()"
            },
            {
              "type": "code",
              "code": "'Hello! How can I help you today?'"
            },
            {
              "type": "paragraph",
              "text": "We can now see what it is like to enable this model to do tool calling. In order to enable that we use .bind_tools to give the language model knowledge of these tools"
            },
            {
              "type": "code",
              "code": "model_with_tools = model.bind_tools(tools)"
            },
            {
              "type": "paragraph",
              "text": "We can now call the model. Let's first call it with a normal message, and see how it responds. We can look at both the content field as well as the tool_calls field."
            },
            {
              "type": "code",
              "code": "query = \"Hi!\"response = model_with_tools.invoke([{\"role\": \"user\", \"content\": query}])print(f\"Message content: {response.text()}\\n\")print(f\"Tool calls: {response.tool_calls}\")"
            },
            {
              "type": "code",
              "code": "Message content: Hello! I'm here to help you. I have access to a powerful search tool that can help answer questions and find information about various topics. What would you like to know about?Feel free to ask any question or request information, and I'll do my best to assist you using the available tools.Tool calls: []"
            },
            {
              "type": "paragraph",
              "text": "Now, let's try calling it with some input that would expect a tool to be called."
            },
            {
              "type": "code",
              "code": "query = \"Search for the weather in SF\"response = model_with_tools.invoke([{\"role\": \"user\", \"content\": query}])print(f\"Message content: {response.text()}\\n\")print(f\"Tool calls: {response.tool_calls}\")"
            },
            {
              "type": "code",
              "code": "Message content: I'll help you search for information about the weather in San Francisco.Tool calls: [{'name': 'tavily_search', 'args': {'query': 'current weather San Francisco'}, 'id': 'toolu_015gdPn1jbB2Z21DmN2RAnti', 'type': 'tool_call'}]"
            },
            {
              "type": "paragraph",
              "text": "We can see that there's now no text content, but there is a tool call! It wants us to call the Tavily Search tool."
            },
            {
              "type": "paragraph",
              "text": "This isn't calling that tool yet - it's just telling us to. In order to actually call it, we'll want to create our agent."
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Create the agent‚Äã",
          "anchor": "create-the-agent",
          "blocks": [
            {
              "type": "paragraph",
              "text": "Now that we have defined the tools and the LLM, we can create the agent. We will be using LangGraph to construct the agent. Currently, we are using a high level interface to construct the agent, but the nice thing about LangGraph is that this high-level interface is backed by a low-level, highly controllable API in case you want to modify the agent logic."
            },
            {
              "type": "paragraph",
              "text": "Now, we can initialize the agent with the LLM and the tools."
            },
            {
              "type": "paragraph",
              "text": "Note that we are passing in the model, not model_with_tools. That is because create_react_agent will call .bind_tools for us under the hood."
            },
            {
              "type": "code",
              "code": "from langgraph.prebuilt import create_react_agentagent_executor = create_react_agent(model, tools)"
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Run the agent‚Äã",
          "anchor": "run-the-agent",
          "blocks": [
            {
              "type": "paragraph",
              "text": "We can now run the agent with a few queries! Note that for now, these are all stateless queries (it won't remember previous interactions). Note that the agent will return the final state at the end of the interaction (which includes any inputs, we will see later on how to get only the outputs)."
            },
            {
              "type": "paragraph",
              "text": "First up, let's see how it responds when there's no need to call a tool:"
            },
            {
              "type": "code",
              "code": "input_message = {\"role\": \"user\", \"content\": \"Hi!\"}response = agent_executor.invoke({\"messages\": [input_message]})for message in response[\"messages\"]:    message.pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================Hi!==================================\u001b[1m Ai Message \u001b[0m==================================Hello! I'm here to help you with your questions using the available search tools. Please feel free to ask any question, and I'll do my best to find relevant and accurate information for you."
            },
            {
              "type": "paragraph",
              "text": "In order to see exactly what is happening under the hood (and to make sure it's not calling a tool) we can take a look at the LangSmith trace"
            },
            {
              "type": "paragraph",
              "text": "Let's now try it out on an example where it should be invoking the tool"
            },
            {
              "type": "code",
              "code": "input_message = {\"role\": \"user\", \"content\": \"Search for the weather in SF\"}response = agent_executor.invoke({\"messages\": [input_message]})for message in response[\"messages\"]:    message.pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================Search for the weather in SF==================================\u001b[1m Ai Message \u001b[0m==================================[{'text': \"I'll help you search for weather information in San Francisco. Let me use the search engine to find current weather conditions.\", 'type': 'text'}, {'id': 'toolu_01WWcXGnArosybujpKzdmARZ', 'input': {'query': 'current weather San Francisco SF'}, 'name': 'tavily_search', 'type': 'tool_use'}]Tool Calls:  tavily_search (toolu_01WWcXGnArosybujpKzdmARZ) Call ID: toolu_01WWcXGnArosybujpKzdmARZ  Args:    query: current weather San Francisco SF=================================\u001b[1m Tool Message \u001b[0m=================================Name: tavily_search{\"query\": \"current weather San Francisco SF\", \"follow_up_questions\": null, \"answer\": null, \"images\": [], \"results\": [{\"title\": \"Weather in San Francisco, CA\", \"url\": \"https://www.weatherapi.com/\", \"content\": \"{'location': {'name': 'San Francisco', 'region': 'California', 'country': 'United States of America', 'lat': 37.775, 'lon': -122.4183, 'tz_id': 'America/Los_Angeles', 'localtime_epoch': 1750168606, 'localtime': '2025-06-17 06:56'}, 'current': {'last_updated_epoch': 1750167900, 'last_updated': '2025-06-17 06:45', 'temp_c': 11.7, 'temp_f': 53.1, 'is_day': 1, 'condition': {'text': 'Fog', 'icon': '//cdn.weatherapi.com/weather/64x64/day/248.png', 'code': 1135}, 'wind_mph': 4.0, 'wind_kph': 6.5, 'wind_degree': 215, 'wind_dir': 'SW', 'pressure_mb': 1017.0, 'pressure_in': 30.02, 'precip_mm': 0.0, 'precip_in': 0.0, 'humidity': 86, 'cloud': 0, 'feelslike_c': 11.3, 'feelslike_f': 52.4, 'windchill_c': 8.7, 'windchill_f': 47.7, 'heatindex_c': 9.8, 'heatindex_f': 49.7, 'dewpoint_c': 9.6, 'dewpoint_f': 49.2, 'vis_km': 16.0, 'vis_miles': 9.0, 'uv': 0.0, 'gust_mph': 6.3, 'gust_kph': 10.2}}\", \"score\": 0.885373, \"raw_content\": null}, {\"title\": \"Weather in San Francisco in June 2025\", \"url\": \"https://world-weather.info/forecast/usa/san_francisco/june-2025/\", \"content\": \"Detailed ‚ö° San Francisco Weather Forecast for June 2025 - day/night üå°Ô∏è temperatures, precipitations - World-Weather.info. Add the current city. Search. Weather; Archive; Weather Widget ¬∞F. World; United States; California; Weather in San Francisco; ... 17 +64¬∞ +54¬∞ 18 +61¬∞ +54¬∞ 19\", \"score\": 0.8830044, \"raw_content\": null}], \"response_time\": 2.6}==================================\u001b[1m Ai Message \u001b[0m==================================Based on the search results, here's the current weather in San Francisco:- Temperature: 53.1¬∞F (11.7¬∞C)- Conditions: Foggy- Wind: 4.0 mph from the SW- Humidity: 86%- Visibility: 9.0 milesThe weather appears to be typical for San Francisco, with morning fog and mild temperatures. The \"feels like\" temperature is 52.4¬∞F (11.3¬∞C)."
            },
            {
              "type": "paragraph",
              "text": "We can check out the LangSmith trace to make sure it's calling the search tool effectively."
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Streaming Messages‚Äã",
          "anchor": "streaming-messages",
          "blocks": [
            {
              "type": "paragraph",
              "text": "We've seen how the agent can be called with .invoke to get a final response. If the agent executes multiple steps, this may take a while. To show intermediate progress, we can stream back messages as they occur."
            },
            {
              "type": "code",
              "code": "for step in agent_executor.stream({\"messages\": [input_message]}, stream_mode=\"values\"):    step[\"messages\"][-1].pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================Search for the weather in SF==================================\u001b[1m Ai Message \u001b[0m==================================[{'text': \"I'll help you search for information about the weather in San Francisco.\", 'type': 'text'}, {'id': 'toolu_01DCPnJES53Fcr7YWnZ47kDG', 'input': {'query': 'current weather San Francisco'}, 'name': 'tavily_search', 'type': 'tool_use'}]Tool Calls:  tavily_search (toolu_01DCPnJES53Fcr7YWnZ47kDG) Call ID: toolu_01DCPnJES53Fcr7YWnZ47kDG  Args:    query: current weather San Francisco=================================\u001b[1m Tool Message \u001b[0m=================================Name: tavily_search{\"query\": \"current weather San Francisco\", \"follow_up_questions\": null, \"answer\": null, \"images\": [], \"results\": [{\"title\": \"Weather in San Francisco\", \"url\": \"https://www.weatherapi.com/\", \"content\": \"{'location': {'name': 'San Francisco', 'region': 'California', 'country': 'United States of America', 'lat': 37.775, 'lon': -122.4183, 'tz_id': 'America/Los_Angeles', 'localtime_epoch': 1750168506, 'localtime': '2025-06-17 06:55'}, 'current': {'last_updated_epoch': 1750167900, 'last_updated': '2025-06-17 06:45', 'temp_c': 11.7, 'temp_f': 53.1, 'is_day': 1, 'condition': {'text': 'Fog', 'icon': '//cdn.weatherapi.com/weather/64x64/day/248.png', 'code': 1135}, 'wind_mph': 4.0, 'wind_kph': 6.5, 'wind_degree': 215, 'wind_dir': 'SW', 'pressure_mb': 1017.0, 'pressure_in': 30.02, 'precip_mm': 0.0, 'precip_in': 0.0, 'humidity': 86, 'cloud': 0, 'feelslike_c': 11.3, 'feelslike_f': 52.4, 'windchill_c': 8.7, 'windchill_f': 47.7, 'heatindex_c': 9.8, 'heatindex_f': 49.7, 'dewpoint_c': 9.6, 'dewpoint_f': 49.2, 'vis_km': 16.0, 'vis_miles': 9.0, 'uv': 0.0, 'gust_mph': 6.3, 'gust_kph': 10.2}}\", \"score\": 0.9542825, \"raw_content\": null}, {\"title\": \"Weather in San Francisco in June 2025\", \"url\": \"https://world-weather.info/forecast/usa/san_francisco/june-2025/\", \"content\": \"Detailed ‚ö° San Francisco Weather Forecast for June 2025 - day/night üå°Ô∏è temperatures, precipitations - World-Weather.info. Add the current city. Search. Weather; Archive; Weather Widget ¬∞F. World; United States; California; Weather in San Francisco; ... 17 +64¬∞ +54¬∞ 18 +61¬∞ +54¬∞ 19\", \"score\": 0.8638634, \"raw_content\": null}], \"response_time\": 2.57}==================================\u001b[1m Ai Message \u001b[0m==================================Based on the search results, here's the current weather in San Francisco:- Temperature: 53.1¬∞F (11.7¬∞C)- Condition: Foggy- Wind: 4.0 mph from the Southwest- Humidity: 86%- Visibility: 9.0 miles- Feels like: 52.4¬∞F (11.3¬∞C)This is quite typical weather for San Francisco, which is known for its fog, especially during the morning hours. The city's proximity to the ocean and unique geographical features often result in mild temperatures and foggy conditions."
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Streaming tokens‚Äã",
          "anchor": "streaming-tokens",
          "blocks": [
            {
              "type": "paragraph",
              "text": "In addition to streaming back messages, it is also useful to stream back tokens. We can do this by specifying stream_mode=\"messages\"."
            },
            {
              "type": "paragraph",
              "text": "::: note"
            },
            {
              "type": "paragraph",
              "text": "Below we use message.text(), which requires langchain-core>=0.3.37."
            },
            {
              "type": "paragraph",
              "text": ":::"
            },
            {
              "type": "code",
              "code": "for step, metadata in agent_executor.stream(    {\"messages\": [input_message]}, config, stream_mode=\"messages\"):    if metadata[\"langgraph_node\"] == \"agent\" and (text := step.text()):        print(text, end=\"|\")"
            },
            {
              "type": "code",
              "code": "I|'ll help you search for information| about the weather in San Francisco.|Base|d on the search results, here|'s the current weather in| San Francisco:-| Temperature: 53.1¬∞F (|11.7¬∞C)-| Condition: Foggy- Wind:| 4.0 mph from| the Southwest- Humidity|: 86%|- Visibility: 9|.0 miles- Pressure: |30.02 in|HgThe weather| is characteristic of San Francisco, with| foggy conditions and mild temperatures|. The \"feels like\" temperature is slightly| lower at 52.4|¬∞F (11.|3¬∞C)| due to the wind chill effect|.|"
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Adding in memory‚Äã",
          "anchor": "adding-in-memory",
          "blocks": [
            {
              "type": "paragraph",
              "text": "As mentioned earlier, this agent is stateless. This means it does not remember previous interactions. To give it memory we need to pass in a checkpointer. When passing in a checkpointer, we also have to pass in a thread_id when invoking the agent (so it knows which thread/conversation to resume from)."
            },
            {
              "type": "code",
              "code": "from langgraph.checkpoint.memory import MemorySavermemory = MemorySaver()"
            },
            {
              "type": "code",
              "code": "agent_executor = create_react_agent(model, tools, checkpointer=memory)config = {\"configurable\": {\"thread_id\": \"abc123\"}}"
            },
            {
              "type": "code",
              "code": "for step in agent_executor.stream(    {\"messages\": [(\"user\", \"Hi, I'm Bob!\")]}, config, stream_mode=\"values\"):    step[\"messages\"][-1].pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================Hi, I'm Bob!==================================\u001b[1m Ai Message \u001b[0m==================================Hello Bob! I'm an AI assistant who can help you search for information using specialized search tools. Is there anything specific you'd like to know about or search for? I'm happy to help you find accurate and up-to-date information on various topics."
            },
            {
              "type": "code",
              "code": "for step in agent_executor.stream(    {\"messages\": [(\"user\", \"What is my name?\")]}, config, stream_mode=\"values\"):    step[\"messages\"][-1].pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================What's my name?==================================\u001b[1m Ai Message \u001b[0m==================================Your name is Bob, as you introduced yourself earlier. I can remember information shared within our conversation without needing to search for it."
            },
            {
              "type": "paragraph",
              "text": "Example LangSmith trace"
            },
            {
              "type": "paragraph",
              "text": "If you want to start a new conversation, all you have to do is change the thread_id used"
            },
            {
              "type": "code",
              "code": "config = {\"configurable\": {\"thread_id\": \"xyz123\"}}for step in agent_executor.stream(    {\"messages\": [(\"user\", \"What is my name?\")]}, config, stream_mode=\"values\"):    step[\"messages\"][-1].pretty_print()"
            },
            {
              "type": "code",
              "code": "================================\u001b[1m Human Message \u001b[0m=================================What's my name?==================================\u001b[1m Ai Message \u001b[0m==================================I apologize, but I don't have access to any tools that would tell me your name. I can only assist you with searching for publicly available information using the tavily_search function. I don't have access to personal information about users. If you'd like to tell me your name, I'll be happy to address you by it."
            }
          ],
          "children": []
        },
        {
          "level": 2,
          "heading_text": "Conclusion‚Äã",
          "anchor": "conclusion",
          "blocks": [
            {
              "type": "paragraph",
              "text": "That's a wrap! In this quick start we covered how to create a simple agent. We've then shown how to stream back a response - not only with the intermediate steps, but also tokens! We've also added in memory so you can have a conversation with them. Agents are a complex topic with lots to learn!"
            },
            {
              "type": "paragraph",
              "text": "For more information on Agents, please check out the LangGraph documentation. This has it's own set of concepts, tutorials, and how-to guides."
            },
            {
              "type": "list",
              "ordered": false,
              "items": [
                "Jupyter Notebook",
                "Installation",
                "LangSmith",
                "Tavily"
              ]
            }
          ],
          "children": []
        }
      ]
    }
  ]
}