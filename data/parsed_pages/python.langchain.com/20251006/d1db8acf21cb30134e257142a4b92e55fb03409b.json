{
  "provenance": {
    "url_final": "https://python.langchain.com/docs/how_to/runnable_runtime_secrets/",
    "title": "How to pass runtime secrets to runnables | 🦜️🔗 LangChain",
    "fetched_at": "2025-10-06T21:56:17.049594"
  },
  "sections": [
    {
      "level": 1,
      "heading_text": "How to pass runtime secrets to runnables | 🦜️🔗 LangChain",
      "blocks": [
        {
          "type": "paragraph",
          "text": "We can pass in secrets to our runnables at runtime using the RunnableConfig. Specifically we can pass in secrets with a __ prefix to the configurable field. This will ensure that these secrets aren't traced as part of the invocation:"
        },
        {
          "type": "code",
          "code": "from langchain_core.runnables import RunnableConfigfrom langchain_core.tools import tool@tooldef foo(x: int, config: RunnableConfig) -> int:    \"\"\"Sum x and a secret int\"\"\"    return x + config[\"configurable\"][\"__top_secret_int\"]foo.invoke({\"x\": 5}, {\"configurable\": {\"__top_secret_int\": 2, \"traced_key\": \"bar\"}})"
        },
        {
          "type": "code",
          "code": "7"
        },
        {
          "type": "paragraph",
          "text": "Looking at the LangSmith trace for this run, we can see that \"traced_key\" was recorded (as part of Metadata) while our secret int was not: https://smith.langchain.com/public/aa7e3289-49ca-422d-a408-f6b927210170/r"
        }
      ],
      "children": []
    }
  ]
}